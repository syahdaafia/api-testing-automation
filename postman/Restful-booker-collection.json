{
	"info": {
		"_postman_id": "8955267d-a690-4396-b70e-765db452ed96",
		"name": "Restful-booker automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24074206"
	},
	"item": [
		{
			"name": "Valid request",
			"item": [
				{
					"name": "Create token valid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Succesfully login, status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Body match string token\", function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"token\");\r",
									"})\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"console.log(\"Token dari API:\", jsonData.token); // Menampilkan token di Postman Console\r",
									"pm.environment.set(\"token\", jsonData.token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All  booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ambil data booking berhasil, status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Body match string\", function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"bookingid\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/booking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Booking id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ambil data booking berhasil, status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Body match string\", function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"firstname\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/booking/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"update data booking berhasil, status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Body match string\", function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"firstname\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"{{firstName}}\",\r\n    \"lastname\" : \"{{lastName}}\",\r\n    \"totalprice\" : {{totalPrice}},\r\n    \"depositpaid\" : {{depositPaid}},\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"{{checkIn}}\",\r\n        \"checkout\" : \"{{checkOut}}\"\r\n    },\r\n    \"additionalneeds\" : \"{{additional}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/{{id}}",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update partial booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"update data booking berhasil, status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Body match string\", function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"firstname\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"{{newFirstName}}\",\r\n    \"lastname\" : \"{{newLastName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get filter by name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ambil data booking berhasil, status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Body match string\", function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"bookingid\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/booking?firstname={{newFirstName}}&lastname={{newLastName}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "firstname",
									"value": "{{newFirstName}}"
								},
								{
									"key": "lastname",
									"value": "{{newLastName}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"delete data booking berhasil, status code is 201\", function(){\r",
									"    pm.response.to.have.status(201);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/booking/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create token",
			"item": [
				{
					"name": "Create token validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    \r",
									"    let jsonData = pm.response.json();\r",
									"\r",
									"    if (jsonData.token) {\r",
									"        pm.expect(jsonData.token).to.be.a(\"string\"); // Login sukses\r",
									"    } else if (jsonData.reason) {\r",
									"        pm.expect(jsonData.reason).to.include(\"Bad credentials\"); // Login gagal\r",
									"    } else {\r",
									"        pm.expect.fail(\"Respons tidak sesuai\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get booking id",
			"item": [
				{
					"name": "Get booking id validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let jsonData = pm.response.json();\r",
									"\r",
									"    // Pastikan respons adalah array\r",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;\r",
									"\r",
									"    // Jika array tidak kosong, pastikan setiap item memiliki 'bookingid' yang berupa angka\r",
									"    if (jsonData.length > 0) {\r",
									"        jsonData.forEach(item => {\r",
									"            pm.expect(item).to.have.property(\"bookingid\");\r",
									"            pm.expect(item.bookingid).to.be.a(\"number\");\r",
									"        });\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let params = [];\r",
									"\r",
									"let firstName = pm.iterationData.get(\"firstName\");\r",
									"let lastName = pm.iterationData.get(\"lastName\");\r",
									"let checkIn = pm.iterationData.get(\"checkIn\");\r",
									"let checkOut = pm.iterationData.get(\"checkOut\");\r",
									"\r",
									"if (firstName) params.push(`firstname=${encodeURIComponent(firstName)}`);\r",
									"if (lastName) params.push(`lastname=${encodeURIComponent(lastName)}`);\r",
									"if (checkIn) params.push(`checkin=${encodeURIComponent(checkIn)}`);\r",
									"if (checkOut) params.push(`checkout=${encodeURIComponent(checkOut)}`);\r",
									"\r",
									"let finalUrl = \"{{baseUrl}}/booking\";\r",
									"if (params.length > 0) {\r",
									"    finalUrl += \"?\" + params.join(\"&\");\r",
									"}\r",
									"\r",
									"pm.environment.set(\"finalUrl\", finalUrl);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{finalUrl}}",
							"host": [
								"{{finalUrl}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}